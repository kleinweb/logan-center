<?xml version="1.0"?>
<ruleset
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/squizlabs/PHP_CodeSniffer/master/phpcs.xsd"
    name="Kleinweb">

    <description>The Kleinweb PHP Coding Standards</description>

    <!-- === Configuration ===================================================================== -->

    <!-- PHP Code Sniffer is for PHP files only. -->
    <arg name="extensions" value="php" />
    <!-- Show colors in console -->
    <arg value="-colors" />
    <arg value="sp" />
    <!-- Show sniff codes in all reports -->
    <arg value="ns" />

    <!-- Support for PHP 8.0+ -->
    <config name="testVersion" value="8.0-" />

    <!-- === Patterns ========================================================================== -->

    <!--
    If no files or directories are specified on the command line,
    fallback to checking the directory containing `phpcs.xml`.

    File and directory paths specified in a ruleset are
    relative to the ruleset's location, and that specifying any file or
    directory path on the command line will ignore all file tags.
    -->
    <!-- <file>.</file> -->

    <!-- Ignore irrelevant paths and filetypes. -->
    <exclude-pattern>*/build/</exclude-pattern>
    <exclude-pattern>*/dist/</exclude-pattern>
    <exclude-pattern>*/node_modules/*</exclude-pattern>
    <exclude-pattern>*/vendor/*</exclude-pattern>
    <exclude-pattern>*.js</exclude-pattern>
    <exclude-pattern>*.css</exclude-pattern>

    <!-- Ignore Composer-managed WordPress dependencies. -->
    <exclude-pattern>*/web/wp</exclude-pattern>
    <exclude-pattern>*/web/app/themes/twentytwentythree/</exclude-pattern>

    <!-- === Rules ============================================================================= -->

    <!-- PHP compatibility takes precedence over all. -->
    <rule ref="PHPCompatibility" />

    <!-- PSR12 is next-most important. -->
    <rule ref="PSR12">
        <!-- Ignore all Illuminate files -->
        <exclude-pattern>*/Illuminate/*</exclude-pattern>
    </rule>

    <!-- WordPress-specific standards enforce best practices, but are overly-opinionated for the
    sake of maintaining its notorious compatibility with ancient PHP versions. At the time of
    writing, they don't support PHP 8 in any released version of the standards, hence our tracking
    of the upstream `develop` branch. So we use the PHPCS rules, but carefully. -->
<!--    <rule ref="WordPress">-->
<!--        <exclude name="Generic.Arrays.DisallowShortArraySyntax" />-->
<!--        <exclude name="PEAR.Functions.FunctionCallSignature.CloseBracketLine" />-->
<!--        <exclude name="PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket" />-->
<!--        <exclude name="PEAR.Functions.FunctionCallSignature.MultipleArguments" />-->
<!--        <exclude name="Universal.Arrays.DisallowShortArraySyntax.Found" />-->
<!--        <exclude name="Universal.Operators.DisallowShortTernary.Found" />-->
<!--        <exclude name="WordPress.PHP.DisallowShortTernary.Found" />-->
<!--    </rule>-->

<!--    <rule ref="WordPress.NamingConventions.ValidHookName">-->
<!--        <properties>-->
<!--            <property name="additionalWordDelimiters" value="/" />-->
<!--        </properties>-->
<!--    </rule>-->

<!--    <rule ref="PHPCompatibilityWP" />-->
<!--    <rule ref="Generic.Arrays.DisallowLongArraySyntax.Found" />-->

    <!-- We should be cognizant of long lines, but handle it case-by-case -->
    <rule ref="Generic.Files.LineLength.TooLong">
        <severity>1</severity>
    </rule>

    <!-- Encourage having only one structure per file. -->
    <rule ref="Generic.Files.OneObjectStructurePerFile">
        <type>warning</type>
        <!-- <type>error</type> -->
    </rule>

</ruleset>
