export interface PossibleTypesResultData {
  possibleTypes: {
    [key: string]: string[]
  }
}
const result: PossibleTypesResultData = {
  possibleTypes: {
    Commenter: ['CommentAuthor', 'User'],
    ContentNode: ['MediaItem', 'Page', 'Post'],
    ContentRevisionUnion: ['Page', 'Post'],
    ContentTemplate: [
      'DefaultTemplate',
      'Template_Blank',
      'Template_PageLargeHeader',
      'Template_PageNoSeparators',
      'Template_SinglePostNoSeparators',
    ],
    DatabaseIdentifier: [
      'Category',
      'Comment',
      'MediaItem',
      'Menu',
      'MenuItem',
      'Page',
      'Post',
      'PostFormat',
      'Tag',
      'User',
    ],
    EnqueuedAsset: ['EnqueuedScript', 'EnqueuedStylesheet'],
    HierarchicalContentNode: ['MediaItem', 'Page'],
    HierarchicalTermNode: ['Category'],
    MenuItemLinkable: ['Category', 'Page', 'Post', 'Tag'],
    MenuItemObjectUnion: ['Category', 'Page', 'Post', 'Tag'],
    Node: [
      'Category',
      'Comment',
      'CommentAuthor',
      'ContentType',
      'EnqueuedScript',
      'EnqueuedStylesheet',
      'MediaItem',
      'Menu',
      'MenuItem',
      'Page',
      'Plugin',
      'Post',
      'PostFormat',
      'Tag',
      'Taxonomy',
      'Theme',
      'User',
      'UserRole',
    ],
    NodeWithAuthor: ['MediaItem', 'Page', 'Post'],
    NodeWithComments: ['MediaItem', 'Page', 'Post'],
    NodeWithContentEditor: ['Page', 'Post'],
    NodeWithExcerpt: ['Post'],
    NodeWithFeaturedImage: ['Page', 'Post'],
    NodeWithPageAttributes: ['Page'],
    NodeWithRevisions: ['Page', 'Post'],
    NodeWithTemplate: ['MediaItem', 'Page', 'Post'],
    NodeWithTitle: ['MediaItem', 'Page', 'Post'],
    NodeWithTrackbacks: ['Post'],
    TermNode: ['Category', 'PostFormat', 'Tag'],
    UniformResourceIdentifiable: [
      'Category',
      'ContentType',
      'MediaItem',
      'Page',
      'Post',
      'PostFormat',
      'Tag',
      'User',
    ],
  },
}
export default result
